import type { CustomMenuItem } from '@clerk/types';
import type { AddCustomMenuItemParams } from '../types';
export declare const useUserButtonCustomMenuItems: () => {
    customMenuItems: import("vue").Ref<{
        label: string;
        href?: string | undefined;
        onClick?: (() => void) | undefined;
        open?: string | undefined;
        mountIcon?: ((el: HTMLDivElement) => void) | undefined;
        unmountIcon?: ((el?: HTMLDivElement) => void) | undefined;
        mount?: ((el: HTMLDivElement) => void) | undefined;
        unmount?: ((el?: HTMLDivElement) => void) | undefined;
    }[], CustomMenuItem[] | {
        label: string;
        href?: string | undefined;
        onClick?: (() => void) | undefined;
        open?: string | undefined;
        mountIcon?: ((el: HTMLDivElement) => void) | undefined;
        unmountIcon?: ((el?: HTMLDivElement) => void) | undefined;
        mount?: ((el: HTMLDivElement) => void) | undefined;
        unmount?: ((el?: HTMLDivElement) => void) | undefined;
    }[]>;
    customMenuItemsPortals: import("vue").ComputedRef<import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>[]>;
    addCustomMenuItem: (params: AddCustomMenuItemParams) => void;
};
