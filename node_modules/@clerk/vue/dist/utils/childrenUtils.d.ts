import { type VNode } from 'vue';
type ButtonName = 'SignInButton' | 'SignUpButton' | 'SignOutButton' | 'SignInWithMetamaskButton';
export declare const normalizeWithDefaultValue: (slotContent: VNode[] | undefined, defaultValue: string) => VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}> | VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>[];
export declare const assertSingleChild: (slotContent: VNode | VNode[], name: ButtonName) => VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>;
export {};
