declare const _default: import("vue").DefineComponent<({
    path: string | undefined;
    routing?: Extract<import("@clerk/types").RoutingStrategy, "path">;
} & {
    afterCreateOrganizationUrl?: ((organization: import("@clerk/types").OrganizationResource) => string) | ((string & Record<never, never>) | ":name" | ":id" | ":slug" | ":imageUrl" | ":hasImage" | ":membersCount" | ":pendingInvitationsCount" | ":adminDeleteEnabled" | ":maxAllowedMemberships" | ":pathRoot");
    skipInvitationScreen?: boolean;
    appearance?: import("@clerk/types").CreateOrganizationTheme;
    hideSlug?: boolean;
}) | ({
    path?: never;
    routing?: Extract<import("@clerk/types").RoutingStrategy, "hash" | "virtual">;
} & {
    afterCreateOrganizationUrl?: ((organization: import("@clerk/types").OrganizationResource) => string) | ((string & Record<never, never>) | ":name" | ":id" | ":slug" | ":imageUrl" | ":hasImage" | ":membersCount" | ":pendingInvitationsCount" | ":adminDeleteEnabled" | ":maxAllowedMemberships" | ":pathRoot");
    skipInvitationScreen?: boolean;
    appearance?: import("@clerk/types").CreateOrganizationTheme;
    hideSlug?: boolean;
}), {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<({
    path: string | undefined;
    routing?: Extract<import("@clerk/types").RoutingStrategy, "path">;
} & {
    afterCreateOrganizationUrl?: ((organization: import("@clerk/types").OrganizationResource) => string) | ((string & Record<never, never>) | ":name" | ":id" | ":slug" | ":imageUrl" | ":hasImage" | ":membersCount" | ":pendingInvitationsCount" | ":adminDeleteEnabled" | ":maxAllowedMemberships" | ":pathRoot");
    skipInvitationScreen?: boolean;
    appearance?: import("@clerk/types").CreateOrganizationTheme;
    hideSlug?: boolean;
}) | ({
    path?: never;
    routing?: Extract<import("@clerk/types").RoutingStrategy, "hash" | "virtual">;
} & {
    afterCreateOrganizationUrl?: ((organization: import("@clerk/types").OrganizationResource) => string) | ((string & Record<never, never>) | ":name" | ":id" | ":slug" | ":imageUrl" | ":hasImage" | ":membersCount" | ":pendingInvitationsCount" | ":adminDeleteEnabled" | ":maxAllowedMemberships" | ":pathRoot");
    skipInvitationScreen?: boolean;
    appearance?: import("@clerk/types").CreateOrganizationTheme;
    hideSlug?: boolean;
})> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, false, {}, any>;
export default _default;
