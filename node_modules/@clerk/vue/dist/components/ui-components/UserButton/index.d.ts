import type { UserButtonActionProps, UserButtonLinkProps } from '../../../types';
export declare const MenuAction: import("vue").DefineSetupFnComponent<UserButtonActionProps, {}, {}, UserButtonActionProps & {}, import("vue").PublicProps>;
export declare const MenuLink: import("vue").DefineSetupFnComponent<UserButtonLinkProps, {}, {}, UserButtonLinkProps & {}, import("vue").PublicProps>;
export declare const UserButton: {
    new (...args: any[]): import("vue").CreateComponentPublicInstanceWithMixins<Readonly<Omit<import("@clerk/types").UserButtonProps, "userProfileProps" | "customMenuItems"> & {
        userProfileProps?: Pick<import("@clerk/types").UserProfileProps, "additionalOAuthScopes" | "appearance">;
    }> & Readonly<{}>, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, import("vue").PublicProps, {}, false, {}, {}, import("vue").GlobalComponents, import("vue").GlobalDirectives, string, {}, any, import("vue").ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<Omit<import("@clerk/types").UserButtonProps, "userProfileProps" | "customMenuItems"> & {
        userProfileProps?: Pick<import("@clerk/types").UserProfileProps, "additionalOAuthScopes" | "appearance">;
    }> & Readonly<{}>, {}, {}, {}, {}, {}>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import("vue").ComponentOptionsBase<Readonly<Omit<import("@clerk/types").UserButtonProps, "userProfileProps" | "customMenuItems"> & {
    userProfileProps?: Pick<import("@clerk/types").UserProfileProps, "additionalOAuthScopes" | "appearance">;
}> & Readonly<{}>, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, {}, {}, string, {}, import("vue").GlobalComponents, import("vue").GlobalDirectives, string, import("vue").ComponentProvideOptions> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & (new () => {
    $slots: {
        default?: (props: {}) => any;
    };
}) & {
    MenuItems: import("vue").DefineSetupFnComponent<Record<string, any>, {}, {}, Record<string, any> & {}, import("vue").PublicProps>;
    Action: import("vue").DefineSetupFnComponent<UserButtonActionProps, {}, {}, UserButtonActionProps & {}, import("vue").PublicProps>;
    Link: import("vue").DefineSetupFnComponent<UserButtonLinkProps, {}, {}, UserButtonLinkProps & {}, import("vue").PublicProps>;
    UserProfilePage: import("vue").DefineSetupFnComponent<import("../../../types").UserProfilePageProps, {}, {}, import("../../../types").UserProfilePageProps & {}, import("vue").PublicProps>;
    UserProfileLink: import("vue").DefineSetupFnComponent<import("../../../types").UserProfileLinkProps, {}, {}, import("../../../types").UserProfileLinkProps & {}, import("vue").PublicProps>;
};
