declare const _default: import("vue").DefineComponent<({
    path: string | undefined;
    routing?: Extract<import("@clerk/types").RoutingStrategy, "path">;
} & {
    forceRedirectUrl?: string | null;
    fallbackRedirectUrl?: string | null;
    signInUrl?: string;
    signUpUrl?: string;
    appearance?: import("@clerk/types").SignInTheme;
    initialValues?: import("@clerk/types").SignInInitialValues & import("@clerk/types").SignUpInitialValues;
    __experimental?: Record<string, any> & {
        newComponents?: boolean;
    };
    waitlistUrl?: string;
    unsafeMetadata?: SignUpUnsafeMetadata;
    withSignUp?: boolean;
    oauthFlow?: "auto" | "redirect" | "popup";
    oidcPrompt?: string;
} & import("@clerk/types").TransferableOption & import("@clerk/types").SignUpForceRedirectUrl & import("@clerk/types").SignUpFallbackRedirectUrl & import("@clerk/types").LegacyRedirectProps & import("@clerk/types").AfterSignOutUrl) | ({
    path?: never;
    routing?: Extract<import("@clerk/types").RoutingStrategy, "hash" | "virtual">;
} & {
    forceRedirectUrl?: string | null;
    fallbackRedirectUrl?: string | null;
    signInUrl?: string;
    signUpUrl?: string;
    appearance?: import("@clerk/types").SignInTheme;
    initialValues?: import("@clerk/types").SignInInitialValues & import("@clerk/types").SignUpInitialValues;
    __experimental?: Record<string, any> & {
        newComponents?: boolean;
    };
    waitlistUrl?: string;
    unsafeMetadata?: SignUpUnsafeMetadata;
    withSignUp?: boolean;
    oauthFlow?: "auto" | "redirect" | "popup";
    oidcPrompt?: string;
} & import("@clerk/types").TransferableOption & import("@clerk/types").SignUpForceRedirectUrl & import("@clerk/types").SignUpFallbackRedirectUrl & import("@clerk/types").LegacyRedirectProps & import("@clerk/types").AfterSignOutUrl), {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<({
    path: string | undefined;
    routing?: Extract<import("@clerk/types").RoutingStrategy, "path">;
} & {
    forceRedirectUrl?: string | null;
    fallbackRedirectUrl?: string | null;
    signInUrl?: string;
    signUpUrl?: string;
    appearance?: import("@clerk/types").SignInTheme;
    initialValues?: import("@clerk/types").SignInInitialValues & import("@clerk/types").SignUpInitialValues;
    __experimental?: Record<string, any> & {
        newComponents?: boolean;
    };
    waitlistUrl?: string;
    unsafeMetadata?: SignUpUnsafeMetadata;
    withSignUp?: boolean;
    oauthFlow?: "auto" | "redirect" | "popup";
    oidcPrompt?: string;
} & import("@clerk/types").TransferableOption & import("@clerk/types").SignUpForceRedirectUrl & import("@clerk/types").SignUpFallbackRedirectUrl & import("@clerk/types").LegacyRedirectProps & import("@clerk/types").AfterSignOutUrl) | ({
    path?: never;
    routing?: Extract<import("@clerk/types").RoutingStrategy, "hash" | "virtual">;
} & {
    forceRedirectUrl?: string | null;
    fallbackRedirectUrl?: string | null;
    signInUrl?: string;
    signUpUrl?: string;
    appearance?: import("@clerk/types").SignInTheme;
    initialValues?: import("@clerk/types").SignInInitialValues & import("@clerk/types").SignUpInitialValues;
    __experimental?: Record<string, any> & {
        newComponents?: boolean;
    };
    waitlistUrl?: string;
    unsafeMetadata?: SignUpUnsafeMetadata;
    withSignUp?: boolean;
    oauthFlow?: "auto" | "redirect" | "popup";
    oidcPrompt?: string;
} & import("@clerk/types").TransferableOption & import("@clerk/types").SignUpForceRedirectUrl & import("@clerk/types").SignUpFallbackRedirectUrl & import("@clerk/types").LegacyRedirectProps & import("@clerk/types").AfterSignOutUrl)> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, false, {}, any>;
export default _default;
