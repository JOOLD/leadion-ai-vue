import type { OrganizationLinkProps, OrganizationProfilePageProps } from '../../../types';
export declare const OrganizationProfilePage: import("vue").DefineSetupFnComponent<OrganizationProfilePageProps, {}, {}, OrganizationProfilePageProps & {}, import("vue").PublicProps>;
export declare const OrganizationProfileLink: import("vue").DefineSetupFnComponent<OrganizationLinkProps, {}, {}, OrganizationLinkProps & {}, import("vue").PublicProps>;
export declare const OrganizationProfile: {
    new (...args: any[]): import("vue").CreateComponentPublicInstanceWithMixins<Readonly<{
        appearance?: import("@clerk/types").OrganizationProfileTheme | undefined;
        path?: string | undefined;
        routing?: "path" | "hash" | "virtual" | undefined;
        afterLeaveOrganizationUrl?: string | undefined;
        __experimental_startPath?: string | undefined;
        apiKeysProps?: import("@clerk/types").APIKeysProps | undefined;
    }> & Readonly<{}>, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, import("vue").PublicProps, {}, false, {}, {}, import("vue").GlobalComponents, import("vue").GlobalDirectives, string, {}, any, import("vue").ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<{
        appearance?: import("@clerk/types").OrganizationProfileTheme | undefined;
        path?: string | undefined;
        routing?: "path" | "hash" | "virtual" | undefined;
        afterLeaveOrganizationUrl?: string | undefined;
        __experimental_startPath?: string | undefined;
        apiKeysProps?: import("@clerk/types").APIKeysProps | undefined;
    }> & Readonly<{}>, {}, {}, {}, {}, {}>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import("vue").ComponentOptionsBase<Readonly<{
    appearance?: import("@clerk/types").OrganizationProfileTheme | undefined;
    path?: string | undefined;
    routing?: "path" | "hash" | "virtual" | undefined;
    afterLeaveOrganizationUrl?: string | undefined;
    __experimental_startPath?: string | undefined;
    apiKeysProps?: import("@clerk/types").APIKeysProps | undefined;
}> & Readonly<{}>, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, {}, {}, string, {}, import("vue").GlobalComponents, import("vue").GlobalDirectives, string, import("vue").ComponentProvideOptions> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & (new () => {
    $slots: {
        default?: (props: {}) => any;
    };
}) & {
    Page: import("vue").DefineSetupFnComponent<OrganizationProfilePageProps, {}, {}, OrganizationProfilePageProps & {}, import("vue").PublicProps>;
    Link: import("vue").DefineSetupFnComponent<OrganizationLinkProps, {}, {}, OrganizationLinkProps & {}, import("vue").PublicProps>;
};
