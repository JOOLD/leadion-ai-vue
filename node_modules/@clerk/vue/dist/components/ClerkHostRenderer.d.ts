import type { PropType } from 'vue';
import type { CustomPortalsRendererProps } from '../types';
type AnyObject = Record<string, any>;
export declare const CustomPortalsRenderer: import("vue").DefineSetupFnComponent<CustomPortalsRendererProps, {}, {}, CustomPortalsRendererProps & {}, import("vue").PublicProps>;
/**
 * Used to orchestrate mounting of Clerk components in a host Vue application.
 * Components are rendered into a specific DOM node using mount/unmount methods provided by the Clerk class.
 */
export declare const ClerkHostRenderer: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    mount: {
        type: PropType<(node: HTMLDivElement, props: AnyObject) => void>;
        required: false;
    };
    unmount: {
        type: PropType<(node: HTMLDivElement) => void>;
        required: false;
    };
    open: {
        type: PropType<(props: AnyObject) => void>;
        required: false;
    };
    close: {
        type: PropType<() => void>;
        required: false;
    };
    updateProps: {
        type: PropType<(props: {
            node: HTMLDivElement;
            props: AnyObject | undefined;
        }) => void>;
        required: false;
    };
    props: {
        type: ObjectConstructor;
        required: false;
        default: () => {};
    };
}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    mount: {
        type: PropType<(node: HTMLDivElement, props: AnyObject) => void>;
        required: false;
    };
    unmount: {
        type: PropType<(node: HTMLDivElement) => void>;
        required: false;
    };
    open: {
        type: PropType<(props: AnyObject) => void>;
        required: false;
    };
    close: {
        type: PropType<() => void>;
        required: false;
    };
    updateProps: {
        type: PropType<(props: {
            node: HTMLDivElement;
            props: AnyObject | undefined;
        }) => void>;
        required: false;
    };
    props: {
        type: ObjectConstructor;
        required: false;
        default: () => {};
    };
}>> & Readonly<{}>, {
    props: Record<string, any>;
}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export {};
